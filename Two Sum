class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> myV;
        unordered_map<int, int> myMap;
        for(int i = 0; i < nums.size(); ++i) {
            myMap[nums[i]] = i;
        }
        for(int j = 0; j < nums.size(); ++j) {
            int complement = target - nums[j];
            if(myMap.count(complement) > 0 && myMap[complement] != j) {
                myV.push_back(j);
                myV.push_back(myMap[complement]);
                break;
            }
        }
        return myV;
    }
};

/*
Brute Force Solution
        for(int i = 0; i < nums.size()-1; ++i) {
            for(int j = i+1; j < nums.size(); ++j) {
                if(target - nums[i] == nums[j] ) {
                    myV.push_back(i);
                    myV.push_back(j);
                    break;
                }
            }
        }
        return myV;
*/
