class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int count = 0;
        if(n == 0) {
            return true;
        }
        if(flowerbed.size() == 1) {
            if(flowerbed[0] == 1 || n > 1) {
                return false;
            }
            return true;
        }
        
        if(flowerbed.size() == 2) {
            if(flowerbed[0] == 1 || flowerbed[1] == 1 || n > 1) {
                return false;
            }
            return true;
        }
        for(int i = 00; i < flowerbed.size(); ++i) {
            if(i == 0 && flowerbed[1] == 0 && flowerbed[0] == 0) {
                flowerbed[i] = 1;
                ++count;
            }
            if(i == flowerbed.size()-1 && flowerbed[flowerbed.size()-2] == 0 && flowerbed[flowerbed.size()-1] == 0) {
                flowerbed[i] = 1;
                ++count;
            }
            
            if(i != 0 && i != flowerbed.size()-1 && flowerbed[i-1] == 0 && flowerbed[i+1] == 0 && flowerbed[i] == 0) {
                flowerbed[i] = 1;
                ++count;
            }
        }
        
        if(n > count) {
            return false;
        }
        return true;
    }
};
