class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {
        int answer = 0;
        for(int i = 0; i < grid.size(); ++i) {
            for(int j = 0; j < grid[0].size(); ++j) {
                //up check
                if(i == 0 && grid[i][j] == 1) {
                    ++answer;
                } else if(i > 0 && grid[i][j] == 1 && grid[i-1][j] == 0) {
                    ++ answer;
                }
                
                //down check
                if(i == grid.size()-1 && grid[i][j] == 1) {
                    ++answer;
                } else if (i < grid.size()-1 && grid[i][j] == 1 && grid[i+1][j] == 0) {
                    ++answer;
                }
                
                //right check
                if(j == 0 && grid[i][j] == 1) {
                    ++answer;
                } else if (j > 0 && grid[i][j] == 1 && grid[i][j-1] == 0) {
                    ++answer;
                }
                
                //left check
                if(j == grid[0].size()-1 && grid[i][j] == 1) {
                    ++answer;
                } else if (j < grid[0].size()-1 && grid[i][j] == 1 && grid[i][j+1] == 0) {
                    ++answer;
                }
                
                
            }
        }
        
        return answer;
        
    }
};
