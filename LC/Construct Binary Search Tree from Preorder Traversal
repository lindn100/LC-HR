/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        if(preorder.empty()){
            return NULL;
        }
        
        TreeNode* head = new TreeNode(preorder[0]);
        
        int rightSide = 1;
        
        for(; rightSide < preorder.size(); ++rightSide) {
            if(preorder[rightSide] > preorder[0]) {
                break;
            }
        }
        
        vector<int> leftTree;
        vector<int> rightTree;
        
        for(int j = 1; j < rightSide; ++j){
            leftTree.push_back(preorder[j]);
        }
        
        for(int k = rightSide; k < preorder.size(); ++k) {
            rightTree.push_back(preorder[k]);
        }
        
        head->left = bstFromPreorder(leftTree);
        head->right = bstFromPreorder(rightTree);
        
        return head;
        
    }
};
