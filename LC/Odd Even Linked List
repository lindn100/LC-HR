class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head) {
            return NULL;
        }
        int place = 1;
        vector<ListNode*> oddNums;
        vector<ListNode*> evenNums;
        
        ListNode* curr = head;
        while(curr) {
            if(place % 2 == 1) {
                oddNums.push_back(curr);
            } else {
                evenNums.push_back(curr);
            }
            
            ++place;
            curr = curr->next;
        }
        
        ListNode* root = oddNums[0];
        curr = root;
        
        if(oddNums.size() > 1) {
            for(int i = 1; i < oddNums.size(); ++i) {
                curr->next = oddNums[i];
                curr = curr->next;
            }
        }
        
        if(evenNums.size() > 0) {
            for(int i = 0; i < evenNums.size(); ++i) {
                curr->next  = evenNums[i];
                curr = curr->next;
            }
        }
        
        curr->next = NULL;
        return root;
        
    }
};
