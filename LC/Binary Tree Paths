class Solution {
public:
    vector<string> answer;
    vector<string> stk;
    vector<string> binaryTreePaths(TreeNode* root) {
        dfs(root);
        return answer;
    }
    
    void dfs(TreeNode* root) {
        if(!root) {
            return;
        }
        
        if(root->left || root->right) {
            stk.push_back(to_string(root->val) + "->");
        } else {
            stk.push_back(to_string(root->val));
        }
        
        dfs(root->left);
        
        if(!root->left && !root->right) {
            string temp = "";
            for(int i = 0; i < stk.size(); ++i) {
                temp += stk[i];
            }
            
            answer.push_back(temp);
        }
        
        dfs(root->right);
        stk.pop_back();
    }
};
