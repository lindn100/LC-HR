/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> answer;
        queue<TreeNode*> myQ;
        
        if(!root) {
            return answer;
        }
        
        myQ.push(root);
        while(!myQ.empty()) {
            int N = myQ.size();
            int temp = INT_MIN;
            for(int i = 0; i < N; ++i) {
                TreeNode* curr = myQ.front();
                myQ.pop();
                if(curr->left) {
                    myQ.push(curr->left);
                }
                if(curr->right) {
                    myQ.push(curr->right);
                }
                if(temp < curr->val) {
                    temp = curr->val;
                }
            }
            answer.push_back(temp);
        }
        return answer;
    }
};

//BFS
