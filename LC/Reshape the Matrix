class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& nums, int r, int c) {
        if(nums.size() * nums[0].size() != r * c) {
            return nums;
        }
        
        queue<int> myQ;
        
        vector<vector<int>> answer(r, vector<int>(c));
        
        for(int i = 0; i < nums.size(); ++i) {
            for(int j = 0; j < nums[0].size(); ++j) {
                myQ.push(nums[i][j]);
            }
        }
        
        for(int i = 0; i < r; ++i) {
            for(int j = 0; j < c; ++j) {
                answer[i][j] = myQ.front();
                myQ.pop();
            }
        }
        
        return answer;
    }
};

//very good use of a queue here
