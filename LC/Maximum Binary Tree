/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return construct(nums, 0, nums.size());
    }
    
    TreeNode* construct(vector<int> &nums, int l, int r) {
        if (l == r) {
            return NULL;
        }
        
        int maxI = maxNum(nums, l, r);
        TreeNode* root = new TreeNode(nums[maxI]);
        root->left = construct(nums, l, maxI);
        root->right = construct(nums, maxI+1, r);
        return root;
    }
    
    int maxNum(vector<int> &nums, int l, int r) {
        int maxI = l;
        for(int i = l; i < r; ++i) {
            if(nums[maxI] < nums[i]) {
                maxI = i;
            }
        }
        return maxI;
    }
};
