class Solution {
public:
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
        vector<string> answer;
        for(int i = 0; i < words.size(); ++i) {
            if(match(words[i], pattern)) {
                answer.push_back(words[i]);
            }
        }
        
        return answer;
    }
    
    bool match(string word, string pattern) {
        unordered_map<char, char> map1;
        unordered_map<char, char> map2;
        
        for(int i = 0; i < word.size(); ++i) {
            char a = word[i];
            char b = pattern[i];
            if(map1.count(a) == 0) {
                map1[a] = b;
            }
            if(map2.count(b) == 0) {
                map2[b] = a;
            }
            
            if(map1[a] != b || map2[b] != a) {
                return false;
            }
        }
        
        return true;
    }
};
